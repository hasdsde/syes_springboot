server:
    port: 8000
    servlet:
        session:
            timeout: 1m
spring:
    datasource:
        url: jdbc:mysql://hasdsd.cn:3307/syes?serverTimezone=UTC&characterEncoding=utf8
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: root
        password: 123456
        type: com.alibaba.druid.pool.DruidDataSource
        filters: stat, wall, log4j2 #解决sql监控不显示问题
        druid:
            initial-size: 2 # 初始化时建立物理连接的个数。默认0
            max-active: 10 # 最大连接池数量，默认8
            min-idle: 1 # 最小连接池数量
            max-wait: 2000 # 获取连接时最大等待时间，单位毫秒。
            filters: stat,wall,log4j2
            # StatViewServlet监控器。开启后，访问http://域名/druid/index.html
            stat-view-servlet:
                enabled: true # 开启 StatViewServlet，即开启监控功能
                url-pattern: /druid/* # Servlet的映射地址，不填写默认为"/druid/*"。
                login-username: root # 访问监控页面时登录的账号
                login-password: 1234 # 密码
                reset-enable: false # 是否允许重置数据（在页面的重置按钮）。（停用后，依然会有重置按钮，但重置后不会真的重置数据）
                allow: 192.168.31.100,192.168.1.1 # 监控页面访问白名单。默认为127.0.0.1。与黑名单一样，支持子网掩码，如128.242.127.1/24。多个ip用英文逗号分隔
                deny: 18.2.1.3 # 监控页面访问黑名单
            # 配置 WebStatFilter（StatFilter监控器中的Web模板）
            web-stat-filter:
                enabled: true # 开启 WebStatFilter，即开启监控功能中的 Web 监控功能
                url-pattern: /* # 映射地址，即统计指定地址的web请求
                exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*,/actuator/*' # 不统计的web请求，如下是不统计静态资源及druid监控页面本身的请求
                session-stat-enable: true # 是否启用session统计
            filter:
                wall:
                    enabled: true  # 开启SQL防火墙功能
                    config:
                        select-allow: true # 允许执行Select查询操作
                        delete-allow: true # 不允许执行delete操作
                        update-allow: true
                        insert-allow: true
                        drop-table-allow: false
                        create-table-allow: false # 不允许创建表
            aop-patterns: com.syes.syes_springboot.mapper.* #开启Spring监控
    servlet:
        multipart:
            max-file-size: 10GB
            max-request-size: 10GB
    mvc:
        static-path-pattern: ${my.file-config.staticPath}** # 静态资源访问
    resources:
        static-locations: file:${my.file-config.uploadPath} # 静态资源目录
    banner:
        image:
            location: static/delisha.jpg
    redis:
        host: DP
        port: 6379
        database: 0
    rabbitmq:
        host: DP
        virtual-host: syes
        username: syes
        password: syes
        port: 5672
#Mybatis
mybatis:
    mapper-locations: mapper/*.xml
    configuration:
        log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl
mybatis-plus:
    configuration:
        map-underscore-to-camel-case: true
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    type-aliases-package: com.syes.syes_springboot.entity
#日志
logging:
    level:
        root: info
    file:
        name: test.log
        max-size: 10MB
        clean-history-on-start: true
#其他配置
my:
    server: # 上传到服务器需要改这个
        name: http://192.168.31.100
        uploadPath: 'D:/pic/' # 文件下载到哪里，记得屁股加个杠
    file-config:
        uploadPath: '${my.server.uploadPath}'
        staticPath: '/file/img/'
        downloadPath: '${my.server.name}:${server.port}${my.file-config.staticPath}' # 存url到数据库时用的他
#spring actuator
management:
    endpoints:
        web:
            exposure: #选择性开启
                include: health,scheduledtasks,metrics,logfile,env,httptrace
        enabled-by-default: false #这东西因为写了下面的所以没啥效果
    endpoint:
        health:
            enabled: true
            show-details: always
        scheduledtasks: #定时任务
            enabled: true
        metrics: #系统信息
            enabled: true
        logfile: #日志
            enabled: true
        env: #环境变量
            enabled: true
        httptrace: #HTTP请求监控
            enabled: true
